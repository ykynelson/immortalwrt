name: Build OpenWrt x86_64 VHD

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            build-essential ccache ecj fastjar file g++ gawk \
            gettext git java-propose-classpath libelf-dev \
            libncurses5-dev libncursesw5-dev libssl-dev python3 \
            python3-distutils python3-setuptools qemu-utils \
            subversion swig unzip wget zlib1g-dev

      - name: Clone OpenWrt
        run: |
          git clone https://github.com/openwrt/openwrt.git
          cd openwrt
          ./scripts/feeds update -a
          ./scripts/feeds install -a

      - name: Generate .config
        run: |
          cd openwrt
          echo "CONFIG_TARGET_x86=y
          CONFIG_TARGET_x86_64=y
          CONFIG_TARGET_x86_64_Generic=y
          CONFIG_EFI_IMAGES=n
          CONFIG_PACKAGE_luci-app-openclash=y
          CONFIG_PACKAGE_luci-app-passwall=y
          CONFIG_PACKAGE_samba4-server=y
          CONFIG_PACKAGE_curl=y
          CONFIG_PACKAGE_wget=y
          CONFIG_PACKAGE_nano=y" > .config

      - name: Build OpenWrt
        run: |
          cd openwrt
          make defconfig
          make -j$(nproc) download
          make -j$(nproc) || make -j1 V=s

      - name: Convert to VHD
        run: |
          mkdir -p output
          cd openwrt/bin/targets/x86/64/
          RAW_IMG=$(ls openwrt-*-combined.img.gz | sed 's/.gz//')
          gunzip -c $RAW_IMG.gz > ${RAW_IMG}
          qemu-img convert -f raw -O vpc ${RAW_IMG} ../../../output/openwrt-x86-64.vhd

      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        with:
          name: openwrt-x86-64-vhd
          path: output/openwrt-x86-64.vhd
